#!/usr/bin/env python
# -*- coding: utf-8 -*-

PACKAGE = "zed_obstacle_detector"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# Processing Parameters
gen.add("voxel_leaf_size", double_t, 0, "Voxel grid leaf size for downsampling (meters)", 0.08, 0.01, 0.20)
gen.add("enable_uniform_downsampling", bool_t, 0, "Enable uniform sampling downsampling", False)
gen.add("uniform_sampling_radius", double_t, 0, "Uniform sampling radius (meters)", 0.08, 0.01, 0.20)
gen.add("enable_early_exit", bool_t, 0, "Enable early exit for small/large point clouds", True)
gen.add("min_points_for_processing", int_t, 0, "Minimum points required for processing", 200, 50, 1000)
gen.add("max_points_for_processing", int_t, 0, "Maximum points allowed for processing", 15000, 5000, 50000)
gen.add("passthrough_z_min_camera", double_t, 0, "Minimum Z distance in camera frame (meters)", 0.2, 0.1, 2.0)
gen.add("passthrough_z_max_camera", double_t, 0, "Maximum Z distance in camera frame (meters)", 7.0, 3.0, 20.0)

# Ground Detection Parameters
gen.add("enable_ground_filtering", bool_t, 0, "Enable ground plane filtering", False)
gen.add("ground_filter_distance_threshold", double_t, 0, "Ground filter distance threshold (meters)", 0.08, 0.01, 0.3)
gen.add("ground_filter_angle_threshold_deg", double_t, 0, "Ground filter angle threshold (degrees)", 15.0, 5.0, 45.0)
gen.add("ground_filter_max_iterations", int_t, 0, "Ground filter maximum RANSAC iterations", 200, 50, 500)
gen.add("mars_terrain_mode", bool_t, 0, "Enable Mars terrain mode for ground detection", False)

# Clustering Parameters
gen.add("cluster_tolerance", double_t, 0, "Euclidean cluster extraction tolerance (meters)", 0.15, 0.05, 0.5)
gen.add("min_cluster_size", int_t, 0, "Minimum cluster size (number of points)", 50, 10, 200)
gen.add("max_cluster_size", int_t, 0, "Maximum cluster size (number of points)", 5000, 1000, 20000)

# Tracking Parameters
gen.add("obstacle_association_distance", double_t, 0, "Obstacle association distance (meters)", 1.5, 0.5, 5.0)
gen.add("obstacle_timeout_sec", double_t, 0, "Obstacle timeout in seconds", 30.0, 5.0, 120.0)
gen.add("position_smoothing_factor", double_t, 0, "Position smoothing factor (0-1)", 0.2, 0.0, 1.0)
gen.add("min_detections_for_confirmation", int_t, 0, "Minimum detections to confirm obstacle", 3, 1, 10)

# Transform Parameters
gen.add("tf_lookup_timeout", double_t, 0, "TF lookup timeout (seconds)", 0.05, 0.01, 0.5)
gen.add("tf_buffer_duration", double_t, 0, "TF buffer duration (seconds)", 5.0, 1.0, 10.0)
gen.add("enable_transformations", bool_t, 0, "Enable coordinate frame transformations", True)

# Monitoring Parameters
gen.add("enable_detailed_timing", bool_t, 0, "Enable detailed timing measurements", False)
gen.add("enable_debug_publishers", bool_t, 0, "Enable debug topic publishers", False)
gen.add("timing_report_interval", double_t, 0, "Timing report interval (seconds)", 30.0, 5.0, 60.0)
gen.add("enable_performance_logging", bool_t, 0, "Enable performance logging to file", True)

# Debug Parameters
gen.add("enable_debug_output", bool_t, 0, "Enable debug output and visualization", False)

exit(gen.generate(PACKAGE, "zed_obstacle_detector", "ZedObstacleDetector")) 